<project name="to1.4" default="transform" basedir=".">

	<target name="clean">
		<delete dir="dist/src"/>
		<mkdir dir="dist/src"/>
	</target>
		
	<target name="transform" depends="clean">
		<!-- copy over the files -->
		<copy todir="dist/src">
			<fileset dir="stable/src/main/java" includes="org/**/*.java">
				<exclude name="**/annotation/**/*.java"/>
			</fileset>
		</copy>
		<copy todir="dist/src" overwrite="true">
			<fileset dir="pending/src/main/java" includes="org/**/*.java">
				<exclude name="**/coverage/**/*.java"/>
				<exclude name="**/annotation/**/*.java"/>
			</fileset>
		</copy>
		

		<!-- == ANNOTATIONS == -->
		<replace dir="dist/src">
			<replacefilter token="@Override" value="//@Override"/>
			<replacefilter token="@UML" value="//@UML"/>
			<replacefilter token="@Profile" value="//@Profile"/>
			<replacefilter token="@Extension" value="//@Extension"/>
			<replacefilter token="@Deprecated" value="//@Deprecated"/>
			<replacefilter token="@XmlSchema" value="//@XmlSchema"/>
			<replacefilter token="@XmlElement" value="//@XmlElement"/>
			<replacefilter token="import static" value="//import static"/>
			<replacefilter token="import org.opengis.annotation" value="//import org.opengis.annotation"/>
		</replace>
		
		<!-- == GENERICS ==-->
		
		<!-- 0. some special cases, done file by file the good old fashioned way -->
		<!-- org.opengis.util -->
		<replace dir="dist/src/org/opengis/util" includes="CodeList.java">
			<replacefilter token="CodeList&lt;E extends CodeList&lt;E&gt;&gt; implements Comparable&lt;E&gt;"
				value="CodeList/*&lt;E extends CodeList{E}&gt;*/ implements Comparable/*&lt;E&gt;*/"/>
			<replacefilter token="(E)" value="/*(E)*/"/>
			<replacefilter token="final E" value="final /*E*/ Object"/>
		</replace>
		<replace dir="dist/src/org/opengis/util" includes="SimpleEnumerationType.java">
			<replacefilter
				token="SimpleEnumerationType&lt;E extends SimpleEnumerationType&lt;E&gt;&gt; extends CodeList&lt;E&gt;"
				value="SimpleEnumerationType/*&lt;E extends SimpleEnumerationType{E}&gt;*/ extends CodeList/*&lt;E&gt;*/"/>
		</replace>
		
		<!-- org.opengis.feature* -->
		<replace dir="dist/src/org/opengis/feature" includes="ComplexAttribute.java">
			<replacefilter
				token="&lt;C extends Collection&lt;Attribute&gt;, T extends ComplexType&lt;C&gt;&gt; extends Attribute&lt;C,T&gt;"
				value="/*&lt;C extends Collection{Attribute}, T extends ComplexType{C}&gt;*/ extends Attribute/*&lt;C,T&gt;*/"/>
		</replace>
		<replace dir="dist/src/org/opengis/feature" includes="GeometryAttribute.java">
			<replacefilter token="&lt;G, T extends GeometryType&lt;G&gt;&gt; extends Attribute&lt;G,T&gt;"
				value="/*&lt;G, T extends GeometryType{G}&gt; extends Attribute/*&lt;G,T&gt;*/"/>
		</replace>

		<replace dir="dist/src/org/opengis/feature/type" includes="AttributeDescriptor.java">
			<replacefilter token="T getType()" value="AttributeType/*T*/ getType()"/>
		</replace>
		<replace dir="dist/src/org/opengis/feature/type" includes="ComplexType.java">
			<replacefilter token="&lt;C extends Collection&lt;Attribute&gt;&gt; extends AttributeType&lt;C&gt;"
				value="/*&lt;C extends Collection{Attribute}&gt;*/ extends AttributeType/*&lt;C&gt;*/"/>
		</replace>
		<replace dir="dist/src/org/opengis/feature/type" includes="GeometryType.java">
			<replacefilter token="&lt;T&gt; extends AttributeType&lt;T&gt;"
				value="/*&lt;T&gt;*/ extends AttributeType/*&lt;T&gt;*/"/>
		</replace>
		<replace dir="dist/src/org/opengis/feature/type" includes="FeatureType.java">
			<replacefilter token="&lt;C extends Collection&lt;Attribute&gt;&gt; extends ComplexType&lt;C&gt;"
				value="/*&lt;C extends Collection{Attribute}*/ extends ComplexType/*&lt;C&gt;*/"/>
		</replace>
		<replace dir="dist/src/org/opengis/feature/type" includes="ComplexTypeBuilder.java">
			<replacefilter token="void init(T" value="void init(ComplexType"/>
			<replacefilter token="T build()" value="ComplexType build()"/>
			
			<replacefilter token="&lt;B&gt; AttributeType&lt;B&gt; getBinding( Class&lt;B&gt; binding"
				value="/*&lt;B&gt;*/ AttributeType/*&lt;B&gt;*/ getBinding( Class/*&lt;B&gt;*/ binding"/>
			
			<replacefilter token="&lt;B&gt; void addBinding( Class&lt;B&gt; binding, AttributeType&lt;B&gt; type"
				value="/*&lt;B&gt;*/ void addBinding( Class/*&lt;B&gt;*/ binding, AttributeType/*&lt;B&gt;*/ type"/>
			
			<replacefilter token="&lt;E extends T&gt;" value="/*&lt;E extends T&gt;*/"/>
			
			<replacefilter token="E getSuper()" value="ComplexType/*E*/ getSuper()"/>
			<replacefilter token="setSuper(E" value="setSuper(ComplexType/*E*/"/>
		</replace>
		<replace dir="dist/src/org/opengis/feature/type" includes="FeatureCollectionTypeBuilder.java">
			<replacefilter token="void addMemberType(M" value="void addMemberType(FeatureType/*M*/"/>
		</replace>
		<replace dir="dist/src/org/opengis/feature/simple" includes="SimpleFeatureType.java">
			<replacefilter token="&lt;L extends List&lt;Attribute&gt;&gt; extends SequenceType&lt;L&gt;, FeatureType&lt;L&gt;"
				value="/*&lt;L extends List{Attribute}&gt;*/ extends SequenceType/*&lt;L&gt;*/, FeatureType/*&lt;L&gt;*/"/>
		</replace>
		<replace dir="dist/src/org/opengis/feature/simple" includes="SimpleFeatureTypeBuilder.java">
			<replacefilter token="&lt;E extends T&gt; E getSuper();"
				value="/*&lt;E extends T&gt;*/ComplexType/*E*/ getSuper();"/>
		</replace>
		<replace dir="dist/src/org/opengis/feature/simple" includes="SimpleFeatureCollectionType.java">
			<replacefilter token="M getMemberType()" value="FeatureType getMemberType()"/>
		</replace>
		<replace dir="dist/src/org/opengis/feature/xml" includes="SequenceType.java">
			<replacefilter token="&lt;L extends List&lt;Attribute&gt;&gt; extends ComplexType&lt;L&gt;"
				value="/*&lt;L extends List{Attribute}&gt;*/ extends ComplexType/*&lt;L&gt;*/"/>
		</replace>		
		<replace dir="dist/src/org/opengis/feature/xml" includes="Sequence.java">
			<replacefilter token="T getType();" value="AttributeType/*T*/ getType();"/>
			<replacefilter token="L get()" value="List/*&lt;Attribute&gt;*/ get()"/>
		</replace>		
		<replace dir="dist/src/org/opengis/feature/xml" includes="ChoiceType.java">
			<replacefilter token="&lt;S extends Set&lt;Attribute&gt;&gt; extends ComplexType&lt;S&gt;"
				value="/*&lt;S extends Set{Attribute}&gt;*/ extends ComplexType/*&lt;S&gt;*/"/>
		</replace>	
		<replace dir="dist/src/org/opengis/feature/xml" includes="Choice.java">
			<replacefilter token="T getType();" value="AttributeType/*T*/ getType();"/>
			<replacefilter token="S get()" value="Set/*&lt;Attribute&gt;*/ get()"/>
		</replace>	
		
		<replace dir="dist/src/org/opengis/feature/" includes="Attribute.java">
			<replacefilter token="T getType();" value="AttributeType getType();"/>
			<replacefilter token="B get();" value="Object get();"/>
			<replacefilter token="void set(B" value="void set(Object"/>
		</replace>
		
		<replace dir="dist/src/org/opengis/feature/" includes="ComplexAttribute.java">
			<replacefilter token="C get();" value="Object/*Collection{Attribute}*/ get();"/>
			<replacefilter token="void set(C" value="void set(Object/*Collection{Attribute}*/"/>
		</replace>
		<replace dir="dist/src/org/opengis/feature/" includes="ComplexAttributeBuilder.java">
			<replacefilter token="void setType(T" value="void setType(ComplexType/*T*/"/>
			<replacefilter token="T getType()" value="ComplexType/*T*/ getType()"/>
			<replacefilter token="&lt;B&gt; ComplexAttributeBuilder&lt;C,T,A&gt; add(String name, B value"
				value="/*&lt;B&gt;*/ ComplexAttributeBuilder/*&gt;C,T,A&lt;*/ add(String name, Object/*B*/ value"/>
			<replacefilter token="A build(" value="ComplexAttribute build("/>
		</replace>
		
		<replace dir="dist/src/org/opengis/feature/" includes="GeometryAttribute.java">
			<replacefilter token="G get();" value="Object/*Geometry*/ get();"/>
			<replacefilter token="void set(G" value="void set(Object/*Geometry*/"/>	
			
			<replacefilter token="T getType()" value="AttributeType/*T*/ getType()"/>
		</replace>
		
		
		
		

		
		<replace dir="dist/src/org/opengis/feature" includes="**/*.java">
			<replacefilter	token="//import org.opengis.feature.type.AttributeType;"
					value="import org.opengis.feature.type.AttributeType;"/>
			<replacefilter	token="//import org.opengis.feature.type.ComplexType;"
					value="import org.opengis.feature.type.ComplexType;"/>

			<!--replacefilter token="&lt;B&gt; AttributeType&lt;B&gt; getType( Class&lt;B&gt; binding"
				value="/*&lt;B&gt;*/ AttributeType/*&lt;B&gt;*/ getType( Class/*&lt;B&gt;*/ binding"/>
						
			<replacefilter token="&lt;B&gt; AttributeType&lt;B&gt; setType( Class&lt;B&gt; binding"
				value="/*&lt;B&gt;*/ AttributeType/*&lt;B&gt;*/ setType( Class/*&lt;B&gt;*/ binding"/-->
		</replace>
		
		<!-- 1. Assignment statements of the form 
			List<Object> list = new ArrayList<Object> -->
		<replaceregexp byline="true">
			<fileset dir="dist/src" includes="**/*.java"/>
			<regexp pattern="&lt;(\w+)&gt;(.*)=(.*)new(.*)&lt;(\w+)&gt;"/>
			<substitution expression="/*&lt;\1&gt;*/\2=\3new\4/*&lt;\5&gt;*/"/>
		</replaceregexp>
		
		<!-- 2. all other uses -->
		<replaceregexp byline="true">
			<fileset dir="dist/src" includes="**/*.java"/>
			<regexp pattern="(\w+)&lt;([\w|,|\s|&lt;|&gt;|\?|\[|\]]*)&gt;"/>
			<substitution expression="\1/*&lt;\2&gt;*/"/>
		</replaceregexp>
		
		<!-- 3. fix up javadoc lines, #2 screwed with html -->
		<replaceregexp byline="true">
			<fileset dir="dist/src" includes="**/*.java"/>
			<regexp pattern="(\s+)\*(.*)/\*(.*)\*/"/>
			<substitution expression="\1*\2\3"/>
		</replaceregexp>
		
		<!-- == TYPE NARROWING == -->
		<replace dir="dist/src/org/opengis/feature/simple" includes="SimpleFeature.java">
			<replacefilter	token="//import org.opengis.feature.type.AttributeType;"
					value="import org.opengis.feature.type.AttributeType;"/>
			<replacefilter	token="SimpleFeatureType getType();"
					value="AttributeType/*SimpleFeautreType*/ getType();"/>
		</replace>
		<replace dir="dist/src/org/opengis/feature/simple" includes="SimpleFeatureCollection.java">
			<replacefilter	token="//import org.opengis.feature.type.AttributeType;"
					value="import org.opengis.feature.type.AttributeType;"/>
			<replacefilter token="SimpleFeatureCollectionType getType();"
				value="AttributeType/*SimpleFeatureCollectionType*/ getType();"/>
		</replace>
		
	</target>
</project>