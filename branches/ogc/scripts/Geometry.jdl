<?xml version="1.0" encoding="UTF-8"?>

<Declarations xmlns="http://www.opengis.net/Java" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.opengis.net/Java.xsd">
   <classDefinition name="">
      <Java>
package org.geoapi.factories;public interface GeometryFactory {

	<date>/**  Generated from UML model at DateTime 03-17-2003 14:57:30  **/ 
</date>
	
         <package>
            <packageName>ISO 19103 Conceptual Schema Language</packageName>
            <javaPrefix>org.opengis.measure</javaPrefix>
		
		
		<!-- ================== measure ==================== -->
            <classDefinition name="Distance">
               <Java>
package org.opengis.measure;
public class Distance{ 
 		 		public double value;
 		 		public String unit;
 		 		}; 
</Java>
            </classDefinition>
		<!-- ================== measure ==================== -->
            <classDefinition name="Angle">
               <Java>
package org.opengis.measure;
public class Angle{ 
 		 		public double value;
 		 		public String unit;
 		 		}; 
</Java>
            </classDefinition>
		<!-- ================== measure ==================== -->
            <classDefinition name="Length">
               <Java>
package org.opengis.measure;
public class Length{ 
 		 		public double value;
 		 		public String unit;
 		 		}; 
</Java>
            </classDefinition>
		<!-- ================== measure ==================== -->
            <classDefinition name="Area">
               <Java>
package org.opengis.measure;
public class Area{ 
 		 		public double value;
 		 		public String unit;
 		 		}; 
</Java>
            </classDefinition>
		<!-- ================== measure ==================== -->
            <classDefinition name="Volume">
               <Java>
package org.opengis.measure;
public class Volume{ 
 		 		public double value;
 		 		public String unit;
 		 		}; 
</Java>
            </classDefinition>
	
         </package>
	
         <package>
            <packageName>Geometry</packageName>
            <javaPrefix>org.opengis.geometry</javaPrefix>
		
		
		
            <package>
               <packageName>Geometric primitive</packageName>
               <javaPrefix>org.opengis.geometry.primitive</javaPrefix>
			
			
			
       <!-- =========================================== -->
<!-- =================== class =================== -->
               <classDefinition name="Curve">
                  <Java>
package org.opengis.geometry.primitive;
public interface Curve extends 
					OrientableCurve
		{
		void setSegment(CurveSegment[] segment);
		CurveSegment[] getSegment();
		};
</Java>
               </classDefinition>
			
       <!-- =========================================== -->
<!-- =================== class =================== -->
               <classDefinition name="OrientableCurve">
                  <Java>
package org.opengis.geometry.primitive;
public interface OrientableCurve extends 
					OrientablePrimitive
		{
		};
</Java>
               </classDefinition>
			
       <!-- =========================================== -->
<!-- =================== class =================== -->
               <classDefinition name="OrientablePrimitive" abstract="true">
                  <Java>
package org.opengis.geometry.primitive;
public interface OrientablePrimitive extends 
					Primitive
		{
		void setOrientation(boolean orientation);
		boolean getOrientation();
		void setPrimitive(Primitive primitive);
		Primitive getPrimitive();
		};
</Java>
               </classDefinition>
			
       <!-- =========================================== -->
<!-- =================== class =================== -->
               <classDefinition name="OrientableSurface">
                  <Java>
package org.opengis.geometry.primitive;
public interface OrientableSurface extends 
					OrientablePrimitive
		{
		};
</Java>
               </classDefinition>
			
       <!-- =========================================== -->
<!-- =================== class =================== -->
               <classDefinition name="Point">
                  <Java>
package org.opengis.geometry.primitive;
public interface Point extends 
					Primitive
		{
		void setPosition(org.opengis.geometry.coordinate.DirectPosition position);
		org.opengis.geometry.coordinate.DirectPosition getPosition();
		Bearing  bearing (
 					org.opengis.geometry.coordinate.Position  toPoint );
		};
</Java>
               </classDefinition>
			
       <!-- =========================================== -->
<!-- =================== class =================== -->
               <classDefinition name="Primitive" abstract="true">
                  <Java>
package org.opengis.geometry.primitive;
public interface Primitive extends 
					org.opengis.geometry.root.GeometryRoot
		{
		void setComplex(org.opengis.geometry.complex.Complex[] complex);
		org.opengis.geometry.complex.Complex[] getComplex();
		void setContainedPrimitive(Primitive[] containedPrimitive);
		Primitive[] getContainedPrimitive();
		void setContainingPrimitive(Primitive[] containingPrimitive);
		Primitive[] getContainingPrimitive();
		void setProxy(OrientablePrimitive[] proxy);
		OrientablePrimitive[] getProxy();
		};
</Java>
               </classDefinition>
			
       <!-- =========================================== -->
<!-- =================== class =================== -->
               <classDefinition name="Solid">
                  <Java>
package org.opengis.geometry.primitive;
public interface Solid extends 
					Primitive
		{
		org.opengis.measure.Area  area ( );
		org.opengis.measure.Volume  volume ( );
		};
</Java>
               </classDefinition>
			
       <!-- =========================================== -->
<!-- =================== class =================== -->
               <classDefinition name="Surface">
                  <Java>
package org.opengis.geometry.primitive;
public interface Surface extends 
					OrientableSurface
		{
		void setPatch(SurfacePatch[] patch);
		SurfacePatch[] getPatch();
		};
</Java>
               </classDefinition>
			
       <!-- =========================================== -->
<!-- =================== dataType ================ -->
               <classDefinition name="Bearing">
                  <Java>
package org.opengis.geometry.primitive;
public interface Bearing		{
		void setAngle(org.opengis.measure.Angle[] angle);
		org.opengis.measure.Angle[] getAngle();
		void setDirection(double[] direction);
		double[] getDirection();
		};
</Java>
               </classDefinition>
			
       <!-- =========================================== -->
<!-- =================== class =================== -->
               <classDefinition name="SurfaceBoundary">
                  <Java>
package org.opengis.geometry.primitive;
public interface SurfaceBoundary extends 
					PrimitiveBoundary
		{
		void setInterior(Ring[] interior);
		Ring[] getInterior();
		void setExterior(Ring exterior);
		Ring getExterior();
		};
</Java>
               </classDefinition>
			
       <!-- =========================================== -->
<!-- =================== class =================== -->
               <classDefinition name="SurfacePatch" abstract="true">
                  <Java>
package org.opengis.geometry.primitive;
public interface SurfacePatch
		{
		void setInterpolation(SurfaceInterpolation interpolation);
		SurfaceInterpolation getInterpolation();
		void setNumDerivativesOnBoundary(int numDerivativesOnBoundary);
		int getNumDerivativesOnBoundary();
		SurfaceBoundary  boundary ( );
		double[]  upNormal (
 					org.opengis.geometry.coordinate.DirectPosition  point );
		org.opengis.measure.Length  perimeter ( );
		org.opengis.measure.Area  area ( );
		};
</Java>
               </classDefinition>
			
       <!-- =========================================== -->
<!-- =================== class =================== -->
               <classDefinition name="CurveBoundary">
                  <Java>
package org.opengis.geometry.primitive;
public interface CurveBoundary extends 
					PrimitiveBoundary
		{
		void setStartPoint(Point startPoint);
		Point getStartPoint();
		void setEndPoint(Point endPoint);
		Point getEndPoint();
		};
</Java>
               </classDefinition>
			
       <!-- =========================================== -->
<!-- =================== class =================== -->
               <classDefinition name="CurveSegment" abstract="true">
                  <Java>
package org.opengis.geometry.primitive;
public interface CurveSegment
		{
		void setInterpolation(CurveInterpolation interpolation);
		CurveInterpolation getInterpolation();
		void setNumDerivativesAtStart(int numDerivativesAtStart);
		int getNumDerivativesAtStart();
		void setNumDerivativesAtEnd(int numDerivativesAtEnd);
		int getNumDerivativesAtEnd();
		void setNumDerivativeInterior(int numDerivativeInterior);
		int getNumDerivativeInterior();
		org.opengis.geometry.coordinate.PointArray  samplePoint ( );
		CurveBoundary  boundary ( );
		CurveSegment  reverse ( );
		org.opengis.geometry.coordinate.DirectPosition  startPoint ( );
		org.opengis.geometry.coordinate.DirectPosition  endPoint ( );
		org.opengis.geometry.coordinate.DirectPosition  param (
 					org.opengis.measure.Distance  s );
		double[]  tangent (
 					org.opengis.measure.Distance  s );
		org.opengis.measure.Distance  startParam ( );
		org.opengis.measure.Distance  endParam ( );
		org.opengis.geometry.coordinate.ParamForPoint  paramForPoint (
 					org.opengis.geometry.coordinate.DirectPosition  p );
		org.opengis.geometry.coordinate.DirectPosition  constrParam (
 					double  cp );
		double  startConstrParam ( );
		double  endConstrParam ( );
		org.opengis.measure.Length  length1 (
 					org.opengis.geometry.coordinate.Position  point1, 
 					org.opengis.geometry.coordinate.Position  point2 );
		org.opengis.measure.Length  length2 (
 					double  cparam1, 
 					double  cparam2 );
		org.opengis.geometry.coordinate.LineString  asLineString (
 					org.opengis.measure.Distance  spacing, 
 					org.opengis.measure.Distance  offset );
		};
</Java>
               </classDefinition>
			
       <!-- =========================================== -->
<!-- =================== class =================== -->
               <classDefinition name="Ring">
                  <Java>
package org.opengis.geometry.primitive;
public interface Ring extends 
					org.opengis.geometry.complex.CompositeCurve
		{
		};
</Java>
               </classDefinition>
			
       <!-- =========================================== -->
<!-- =================== class =================== -->
               <classDefinition name="SolidBoundary">
                  <Java>
package org.opengis.geometry.primitive;
public interface SolidBoundary extends 
					PrimitiveBoundary
		{
		void setExterior(Shell exterior);
		Shell getExterior();
		void setInterior(Shell[] interior);
		Shell[] getInterior();
		};
</Java>
               </classDefinition>
			
       <!-- =========================================== -->
<!-- =================== class =================== -->
               <classDefinition name="Shell">
                  <Java>
package org.opengis.geometry.primitive;
public interface Shell extends 
					org.opengis.geometry.complex.CompositeSurface
		{
		};
</Java>
               </classDefinition>
			
       <!-- =========================================== -->
<!-- =================== class =================== -->
               <classDefinition name="PrimitiveBoundary" abstract="true">
                  <Java>
package org.opengis.geometry.primitive;
public interface PrimitiveBoundary extends 
					org.opengis.geometry.root.Boundary
		{
		};
</Java>
               </classDefinition>
			<!-- ================== codeList ==================== -->
               <classDefinition name="SurfaceInterpolation">
                  <Java>
package org.opengis.geometry.primitive;
public class SurfaceInterpolation extends Object
 		 		{ 
 		 		private static String[] values = {
 		 		 				"none", 
				 				"planar", 
				 				"spherical", 
				 				"elliptical", 
				 				"conic", 
				 				"tin", 
				 				"parametricCurve", 
				 				"polynomialSpline", 
				 				"rationalSpline", 
				 				"triangulatedSpline"
					 		 		}; 
 		 		public int code;
 		 		public String value() { return values[code];}
 		 		}; 
</Java>
               </classDefinition>
			<!-- ================== codeList ==================== -->
               <classDefinition name="CurveInterpolation">
                  <Java>
package org.opengis.geometry.primitive;
public class CurveInterpolation extends Object
 		 		{ 
 		 		private static String[] values = {
 		 		 				"linear", 
				 				"geodesic", 
				 				"circularArc3Points", 
				 				"circularArc2PointWithBulge", 
				 				"elliptical", 
				 				"clothoid", 
				 				"conic", 
				 				"polynomialSpline", 
				 				"cubicSpline", 
				 				"rationalSpline"
					 		 		}; 
 		 		public int code;
 		 		public String value() { return values[code];}
 		 		}; 
</Java>
               </classDefinition>
		
            </package>
		
            <package>
               <packageName>Geometric complex</packageName>
               <javaPrefix>org.opengis.geometry.complex</javaPrefix>
			
			
			
       <!-- =========================================== -->
<!-- =================== class =================== -->
               <classDefinition name="Complex" abstract="true">
                  <Java>
package org.opengis.geometry.complex;
public interface Complex extends 
					org.opengis.geometry.root.GeometryRoot
		{
		void setElement(org.opengis.geometry.primitive.Primitive[] element);
		org.opengis.geometry.primitive.Primitive[] getElement();
		void setSuperComplex(Complex[] superComplex);
		Complex[] getSuperComplex();
		void setSubComplex(Complex[] subComplex);
		Complex[] getSubComplex();
		boolean  isMaximal ( );
		};
</Java>
               </classDefinition>
			
       <!-- =========================================== -->
<!-- =================== class =================== -->
               <classDefinition name="Composite" abstract="true">
                  <Java>
package org.opengis.geometry.complex;
public interface Composite extends 
					Complex
		{
		void setGenerator(org.opengis.geometry.primitive.Primitive[] generator);
		org.opengis.geometry.primitive.Primitive[] getGenerator();
		};
</Java>
               </classDefinition>
			
       <!-- =========================================== -->
<!-- =================== class =================== -->
               <classDefinition name="CompositeCurve">
                  <Java>
package org.opengis.geometry.complex;
public interface CompositeCurve extends 
					Composite, 
					org.opengis.geometry.primitive.OrientableCurve
		{
		};
</Java>
               </classDefinition>
			
       <!-- =========================================== -->
<!-- =================== class =================== -->
               <classDefinition name="CompositePoint">
                  <Java>
package org.opengis.geometry.complex;
public interface CompositePoint extends 
					Composite, 
					org.opengis.geometry.primitive.Point
		{
		};
</Java>
               </classDefinition>
			
       <!-- =========================================== -->
<!-- =================== class =================== -->
               <classDefinition name="CompositeSolid">
                  <Java>
package org.opengis.geometry.complex;
public interface CompositeSolid extends 
					Composite, 
					org.opengis.geometry.primitive.Solid
		{
		};
</Java>
               </classDefinition>
			
       <!-- =========================================== -->
<!-- =================== class =================== -->
               <classDefinition name="CompositeSurface">
                  <Java>
package org.opengis.geometry.complex;
public interface CompositeSurface extends 
					Composite, 
					org.opengis.geometry.primitive.OrientableSurface
		{
		};
</Java>
               </classDefinition>
			
       <!-- =========================================== -->
<!-- =================== class =================== -->
               <classDefinition name="ComplexBoundary">
                  <Java>
package org.opengis.geometry.complex;
public interface ComplexBoundary extends 
					org.opengis.geometry.root.Boundary
		{
		};
</Java>
               </classDefinition>
		
            </package>
		
            <package>
               <packageName>Coordinate geometry</packageName>
               <javaPrefix>org.opengis.geometry.coordinate</javaPrefix>
			
			
			
       <!-- =========================================== -->
<!-- =================== dataType ================ -->
               <classDefinition name="DirectPosition">
                  <Java>
package org.opengis.geometry.coordinate;
public interface DirectPosition		{
		void setCoordinate(double[] coordinate);
		double[] getCoordinate();
		void setDimension(int dimension);
		int getDimension();
		void setCoordinateReferenceSystem(String coordinateReferenceSystem);
		String getCoordinateReferenceSystem();
		};
</Java>
               </classDefinition>
			
       <!-- =========================================== -->
<!-- =================== class =================== -->
               <classDefinition name="Arc">
                  <Java>
package org.opengis.geometry.coordinate;
public interface Arc extends 
					ArcString
		{
		DirectPosition  center ( );
		org.opengis.measure.Distance  radius ( );
		org.opengis.geometry.primitive.Bearing  startOfArc ( );
		org.opengis.geometry.primitive.Bearing  endOfArc ( );
		};
</Java>
               </classDefinition>
			
       <!-- =========================================== -->
<!-- =================== class =================== -->
               <classDefinition name="ArcString">
                  <Java>
package org.opengis.geometry.coordinate;
public interface ArcString extends 
					org.opengis.geometry.primitive.CurveSegment
		{
		void setNumArc(int numArc);
		int getNumArc();
		void setControlPoints(PointArray controlPoints);
		PointArray getControlPoints();
		Arc[]  asArc ( );
		};
</Java>
               </classDefinition>
			
       <!-- =========================================== -->
<!-- =================== class =================== -->
               <classDefinition name="LineSegment">
                  <Java>
package org.opengis.geometry.coordinate;
public interface LineSegment extends 
					LineString
		{
		};
</Java>
               </classDefinition>
			
       <!-- =========================================== -->
<!-- =================== class =================== -->
               <classDefinition name="Polygon">
                  <Java>
package org.opengis.geometry.coordinate;
public interface Polygon extends 
					org.opengis.geometry.primitive.SurfacePatch
		{
		void setBoundary(org.opengis.geometry.primitive.SurfaceBoundary boundary);
		org.opengis.geometry.primitive.SurfaceBoundary getBoundary();
		void setSpanningSurface(org.opengis.geometry.primitive.Surface spanningSurface);
		org.opengis.geometry.primitive.Surface getSpanningSurface();
		void setSurface(PolyhedralSurface surface);
		PolyhedralSurface getSurface();
		};
</Java>
               </classDefinition>
			
       <!-- =========================================== -->
<!-- =================== class =================== -->
               <classDefinition name="Position">
                  <Java>
package org.opengis.geometry.coordinate;
public interface Position
		{
		void setDirect(DirectPosition direct);
		DirectPosition getDirect();
		};
</Java>
               </classDefinition>
			
       <!-- =========================================== -->
<!-- =================== class =================== -->
               <classDefinition name="Geodesic">
                  <Java>
package org.opengis.geometry.coordinate;
public interface Geodesic extends 
					GeodesicString
		{
		};
</Java>
               </classDefinition>
			
       <!-- =========================================== -->
<!-- =================== class =================== -->
               <classDefinition name="GeodesicString">
                  <Java>
package org.opengis.geometry.coordinate;
public interface GeodesicString extends 
					org.opengis.geometry.primitive.CurveSegment
		{
		void setControlPoint(PointArray controlPoint);
		PointArray getControlPoint();
		Geodesic[]  asGeodesic ( );
		};
</Java>
               </classDefinition>
			
       <!-- =========================================== -->
<!-- =================== class =================== -->
               <classDefinition name="ArcStringByBulge">
                  <Java>
package org.opengis.geometry.coordinate;
public interface ArcStringByBulge extends 
					org.opengis.geometry.primitive.CurveSegment
		{
		void setBulge(double[] bulge);
		double[] getBulge();
		void setNumArc(int numArc);
		int getNumArc();
		void setNormal(double[][] normal);
		double[][] getNormal();
		ArcString  asArcString ( );
		};
</Java>
               </classDefinition>
			
       <!-- =========================================== -->
<!-- =================== class =================== -->
               <classDefinition name="SplineCurve" abstract="true">
                  <Java>
package org.opengis.geometry.coordinate;
public interface SplineCurve extends 
					org.opengis.geometry.primitive.CurveSegment
		{
		void setDegree(int degree);
		int getDegree();
		void setKnot(Knot[] knot);
		Knot[] getKnot();
		void setControlPoints(PointArray controlPoints);
		PointArray getControlPoints();
		};
</Java>
               </classDefinition>
			
       <!-- =========================================== -->
<!-- =================== class =================== -->
               <classDefinition name="PolynomialSpline">
                  <Java>
package org.opengis.geometry.coordinate;
public interface PolynomialSpline extends 
					SplineCurve
		{
		void setVectorAtStart(double[][] vectorAtStart);
		double[][] getVectorAtStart();
		void setVectorAtEnd(double[][] vectorAtEnd);
		double[][] getVectorAtEnd();
		};
</Java>
               </classDefinition>
			
       <!-- =========================================== -->
<!-- =================== class =================== -->
               <classDefinition name="CubicSpline">
                  <Java>
package org.opengis.geometry.coordinate;
public interface CubicSpline extends 
					PolynomialSpline
		{
		};
</Java>
               </classDefinition>
			
       <!-- =========================================== -->
<!-- =================== class =================== -->
               <classDefinition name="Triangle">
                  <Java>
package org.opengis.geometry.coordinate;
public interface Triangle extends 
					Polygon
		{
		void setCorners(Position[] corners);
		Position[] getCorners();
		};
</Java>
               </classDefinition>
			
       <!-- =========================================== -->
<!-- =================== class =================== -->
               <classDefinition name="TriangulatedSurface">
                  <Java>
package org.opengis.geometry.coordinate;
public interface TriangulatedSurface extends 
					PolyhedralSurface
		{
		};
</Java>
               </classDefinition>
			
       <!-- =========================================== -->
<!-- =================== class =================== -->
               <classDefinition name="GriddedSurface">
                  <Java>
package org.opengis.geometry.coordinate;
public interface GriddedSurface extends 
					ParametricCurveSurface
		{
		void setControlPoint(PointGrid controlPoint);
		PointGrid getControlPoint();
		void setRows(int rows);
		int getRows();
		void setColumns(int columns);
		int getColumns();
		};
</Java>
               </classDefinition>
			
       <!-- =========================================== -->
<!-- =================== class =================== -->
               <classDefinition name="BilinearGrid">
                  <Java>
package org.opengis.geometry.coordinate;
public interface BilinearGrid extends 
					GriddedSurface
		{
		};
</Java>
               </classDefinition>
			
       <!-- =========================================== -->
<!-- =================== class =================== -->
               <classDefinition name="BicubicGrid">
                  <Java>
package org.opengis.geometry.coordinate;
public interface BicubicGrid extends 
					GriddedSurface
		{
		void setHoriVectorAtStart(double[][] horiVectorAtStart);
		double[][] getHoriVectorAtStart();
		void setHoriVectorAtEnd(double[][] horiVectorAtEnd);
		double[][] getHoriVectorAtEnd();
		void setVertVectorAtStart(double[][] vertVectorAtStart);
		double[][] getVertVectorAtStart();
		void setVertVectorAtEnd(double[][] vertVectorAtEnd);
		double[][] getVertVectorAtEnd();
		};
</Java>
               </classDefinition>
			
       <!-- =========================================== -->
<!-- =================== class =================== -->
               <classDefinition name="PolyhedralSurface">
                  <Java>
package org.opengis.geometry.coordinate;
public interface PolyhedralSurface extends 
					org.opengis.geometry.primitive.Surface
		{
		};
</Java>
               </classDefinition>
			
       <!-- =========================================== -->
<!-- =================== class =================== -->
               <classDefinition name="ParametricCurveSurface" abstract="true">
                  <Java>
package org.opengis.geometry.coordinate;
public interface ParametricCurveSurface extends 
					org.opengis.geometry.primitive.SurfacePatch
		{
		void setHorizontalCurveType(org.opengis.geometry.primitive.CurveInterpolation horizontalCurveType);
		org.opengis.geometry.primitive.CurveInterpolation getHorizontalCurveType();
		void setVerticalCurveType(org.opengis.geometry.primitive.CurveInterpolation verticalCurveType);
		org.opengis.geometry.primitive.CurveInterpolation getVerticalCurveType();
		org.opengis.geometry.primitive.Curve  horizontalCurve (
 					double  t );
		org.opengis.geometry.primitive.Curve  verticalCurve (
 					double  s );
		DirectPosition  surface (
 					double  s, 
 					double  t );
		};
</Java>
               </classDefinition>
			
       <!-- =========================================== -->
<!-- =================== class =================== -->
               <classDefinition name="Cylinder">
                  <Java>
package org.opengis.geometry.coordinate;
public interface Cylinder extends 
					GriddedSurface
		{
		};
</Java>
               </classDefinition>
			
       <!-- =========================================== -->
<!-- =================== class =================== -->
               <classDefinition name="Cone">
                  <Java>
package org.opengis.geometry.coordinate;
public interface Cone extends 
					GriddedSurface
		{
		};
</Java>
               </classDefinition>
			
       <!-- =========================================== -->
<!-- =================== class =================== -->
               <classDefinition name="Sphere">
                  <Java>
package org.opengis.geometry.coordinate;
public interface Sphere extends 
					GriddedSurface
		{
		};
</Java>
               </classDefinition>
			
       <!-- =========================================== -->
<!-- =================== class =================== -->
               <classDefinition name="BSplineCurve">
                  <Java>
package org.opengis.geometry.coordinate;
public interface BSplineCurve extends 
					SplineCurve
		{
		void setCurveForm(SplineCurveForm curveForm);
		SplineCurveForm getCurveForm();
		void setKnotSpec(KnotType knotSpec);
		KnotType getKnotSpec();
		void setIsPolynomial(boolean isPolynomial);
		boolean getIsPolynomial();
		};
</Java>
               </classDefinition>
			<!-- ================== codeList ==================== -->
               <classDefinition name="KnotType">
                  <Java>
package org.opengis.geometry.coordinate;
public class KnotType extends Object
 		 		{ 
 		 		private static String[] values = {
 		 		 				"uniform", 
				 				"quasiUniform", 
				 				"piecewiseBezier"
					 		 		}; 
 		 		public int code;
 		 		public String value() { return values[code];}
 		 		}; 
</Java>
               </classDefinition>
			
       <!-- =========================================== -->
<!-- =================== class =================== -->
               <classDefinition name="Clothoid">
                  <Java>
package org.opengis.geometry.coordinate;
public interface Clothoid extends 
					org.opengis.geometry.primitive.CurveSegment
		{
		void setRefLocation(AffinePlacement refLocation);
		AffinePlacement getRefLocation();
		void setScaleFactor(double scaleFactor);
		double getScaleFactor();
		void setStartParameter(double startParameter);
		double getStartParameter();
		void setEndParameter(double endParameter);
		double getEndParameter();
		};
</Java>
               </classDefinition>
			
       <!-- =========================================== -->
<!-- =================== class =================== -->
               <classDefinition name="OffsetCurve">
                  <Java>
package org.opengis.geometry.coordinate;
public interface OffsetCurve extends 
					org.opengis.geometry.primitive.CurveSegment
		{
		void setDistance(org.opengis.measure.Length distance);
		org.opengis.measure.Length getDistance();
		void setRefDirection(double[] refDirection);
		double[] getRefDirection();
		void setBaseCurve(org.opengis.geometry.primitive.CurveSegment baseCurve);
		org.opengis.geometry.primitive.CurveSegment getBaseCurve();
		};
</Java>
               </classDefinition>
			
       <!-- =========================================== -->
<!-- =================== class =================== -->
               <classDefinition name="Conic">
                  <Java>
package org.opengis.geometry.coordinate;
public interface Conic extends 
					org.opengis.geometry.primitive.CurveSegment
		{
		void setPosition(AffinePlacement position);
		AffinePlacement getPosition();
		void setShifted(boolean shifted);
		boolean getShifted();
		void setEccentricity(double eccentricity);
		double getEccentricity();
		void setSemiLatusRectum(double semiLatusRectum);
		double getSemiLatusRectum();
		void setStartConstrParam(double startConstrParam);
		double getStartConstrParam();
		void setEndConstrParam(double endConstrParam);
		double getEndConstrParam();
		};
</Java>
               </classDefinition>
			
       <!-- =========================================== -->
<!-- =================== class =================== -->
               <classDefinition name="Tin">
                  <Java>
package org.opengis.geometry.coordinate;
public interface Tin extends 
					TriangulatedSurface
		{
		void setStopLines(LineString[] stopLines);
		LineString[] getStopLines();
		void setBreakLines(LineString[] breakLines);
		LineString[] getBreakLines();
		void setMaxLength(org.opengis.measure.Distance maxLength);
		org.opengis.measure.Distance getMaxLength();
		void setControlPoint(Position[] controlPoint);
		Position[] getControlPoint();
		};
</Java>
               </classDefinition>
			
       <!-- =========================================== -->
<!-- =================== class =================== -->
               <classDefinition name="BSplineSurface">
                  <Java>
package org.opengis.geometry.coordinate;
public interface BSplineSurface extends 
					GriddedSurface
		{
		void setDegree(int[] degree);
		int[] getDegree();
		void setUknot(Knot[] uknot);
		Knot[] getUknot();
		void setVknot(Knot[] vknot);
		Knot[] getVknot();
		void setKnotSpec(KnotType knotSpec);
		KnotType getKnotSpec();
		void setSurfaceForm(BSplineSurfaceForm surfaceForm);
		BSplineSurfaceForm getSurfaceForm();
		void setIsPolynomial(boolean isPolynomial);
		boolean getIsPolynomial();
		};
</Java>
               </classDefinition>
			
       <!-- =========================================== -->
<!-- =================== class =================== -->
               <classDefinition name="AffinePlacement">
                  <Java>
package org.opengis.geometry.coordinate;
public interface AffinePlacement
		{
		void setLocation(Position location);
		Position getLocation();
		void setRefDirection(double[][] refDirection);
		double[][] getRefDirection();
		};
</Java>
               </classDefinition>
			
       <!-- =========================================== -->
<!-- =================== dataType ================ -->
               <classDefinition name="Knot">
                  <Java>
package org.opengis.geometry.coordinate;
public interface Knot		{
		void setValue(double value);
		double getValue();
		void setMultiplicity(int multiplicity);
		int getMultiplicity();
		void setWeight(double weight);
		double getWeight();
		};
</Java>
               </classDefinition>
			
       <!-- =========================================== -->
<!-- =================== class =================== -->
               <classDefinition name="Placement" abstract="true">
                  <Java>
package org.opengis.geometry.coordinate;
public interface Placement
		{
		int  inDimension ( );
		int  outDimesion ( );
		double[]  transform (
 					double[]  in );
		};
</Java>
               </classDefinition>
			
       <!-- =========================================== -->
<!-- =================== class =================== -->
               <classDefinition name="LineString">
                  <Java>
package org.opengis.geometry.coordinate;
public interface LineString extends 
					org.opengis.geometry.primitive.CurveSegment
		{
		void setControlPoint(PointArray controlPoint);
		PointArray getControlPoint();
		LineSegment[]  asLineSegment ( );
		};
</Java>
               </classDefinition>
			
       <!-- =========================================== -->
<!-- =================== dataType ================ -->
               <classDefinition name="Envelope">
                  <Java>
package org.opengis.geometry.coordinate;
public interface Envelope		{
		void setUpperCorner(DirectPosition upperCorner);
		DirectPosition getUpperCorner();
		void setLowerCorner(DirectPosition lowerCorner);
		DirectPosition getLowerCorner();
		};
</Java>
               </classDefinition>
			
       <!-- =========================================== -->
<!-- =================== class =================== -->
               <classDefinition name="Circle">
                  <Java>
package org.opengis.geometry.coordinate;
public interface Circle extends 
					Arc
		{
		};
</Java>
               </classDefinition>
			
       <!-- =========================================== -->
<!-- =================== class =================== -->
               <classDefinition name="GenericSurface" abstract="true">
                  <Java>
package org.opengis.geometry.coordinate;
public interface GenericSurface
		{
		double[]  upNormal (
 					DirectPosition  point );
		org.opengis.measure.Length  perimeter ( );
		org.opengis.measure.Area  area ( );
		};
</Java>
               </classDefinition>
			
       <!-- =========================================== -->
<!-- =================== class =================== -->
               <classDefinition name="GenericCurve" abstract="true">
                  <Java>
package org.opengis.geometry.coordinate;
public interface GenericCurve
		{
		DirectPosition  startPoint ( );
		DirectPosition  endPoint ( );
		DirectPosition  param (
 					org.opengis.measure.Distance  s );
		double[]  tangent (
 					org.opengis.measure.Distance  s );
		org.opengis.measure.Distance  startParam ( );
		org.opengis.measure.Distance  endParam ( );
		ParamForPoint  paramForPoint (
 					DirectPosition  p );
		DirectPosition  constrParam (
 					double  cp );
		double  startConstrParam ( );
		double  endConstrParam ( );
		org.opengis.measure.Length  length1 (
 					Position  point1, 
 					Position  point2 );
		org.opengis.measure.Length  length2 (
 					double  cparam1, 
 					double  cparam2 );
		LineString  asLineString (
 					org.opengis.measure.Distance  spacing, 
 					org.opengis.measure.Distance  offset );
		};
</Java>
               </classDefinition>
			
       <!-- =========================================== -->
<!-- =================== class =================== -->
               <classDefinition name="ArcByBulge">
                  <Java>
package org.opengis.geometry.coordinate;
public interface ArcByBulge extends 
					ArcStringByBulge
		{
		};
</Java>
               </classDefinition>
			
       <!-- =========================================== -->
<!-- =================== dataType ================ -->
               <classDefinition name="PointArray">
                  <Java>
package org.opengis.geometry.coordinate;
public interface PointArray		{
		void setColumn(Position[] column);
		Position[] getColumn();
		};
</Java>
               </classDefinition>
			
       <!-- =========================================== -->
<!-- =================== dataType ================ -->
               <classDefinition name="PointGrid">
                  <Java>
package org.opengis.geometry.coordinate;
public interface PointGrid		{
		void setRow(PointArray[] row);
		PointArray[] getRow();
		};
</Java>
               </classDefinition>
			
       <!-- =========================================== -->
<!-- =================== class =================== -->
               <classDefinition name="Bezier">
                  <Java>
package org.opengis.geometry.coordinate;
public interface Bezier extends 
					BSplineCurve
		{
		};
</Java>
               </classDefinition>
			<!-- ================== codeList ==================== -->
               <classDefinition name="BSplineSurfaceForm">
                  <Java>
package org.opengis.geometry.coordinate;
public class BSplineSurfaceForm extends Object
 		 		{ 
 		 		private static String[] values = {
 		 		 				"planar", 
				 				"cylindrical", 
				 				"conical", 
				 				"spherical", 
				 				"toroidal", 
				 				"unspecified"
					 		 		}; 
 		 		public int code;
 		 		public String value() { return values[code];}
 		 		}; 
</Java>
               </classDefinition>
			<!-- ================== codeList ==================== -->
               <classDefinition name="SplineCurveForm">
                  <Java>
package org.opengis.geometry.coordinate;
public class SplineCurveForm extends Object
 		 		{ 
 		 		private static String[] values = {
 		 		 				"polylineForm", 
				 				"circularArc", 
				 				"ellipticArc", 
				 				"parabolicArc", 
				 				"hyperbolicArc"
					 		 		}; 
 		 		public int code;
 		 		public String value() { return values[code];}
 		 		}; 
</Java>
               </classDefinition>
			
       <!-- =========================================== -->
<!-- =================== dataType ================ -->
               <classDefinition name="ParamForPoint">
                  <Java>
package org.opengis.geometry.coordinate;
public interface ParamForPoint		{
		void setDist(org.opengis.measure.Distance[] dist);
		org.opengis.measure.Distance[] getDist();
		void setPosition(DirectPosition position);
		DirectPosition getPosition();
		};
</Java>
               </classDefinition>
		
            </package>
		
            <package>
               <packageName>Geometry root</packageName>
               <javaPrefix>org.opengis.geometry.root</javaPrefix>
			
			
			
       <!-- =========================================== -->
<!-- =================== class =================== -->
               <classDefinition name="GeometryRoot">
                  <Java>
package org.opengis.geometry.root;
public interface GeometryRoot
		{
		void setCRS(String CRS);
		String getCRS();
		GeometryRoot  mbRegion ( );
		org.opengis.geometry.coordinate.DirectPosition  representativePoint ( );
		Boundary  boundary ( );
		org.opengis.geometry.complex.Complex  closure ( );
		boolean  isSimple ( );
		boolean  isCycle ( );
		org.opengis.measure.Distance  distance (
 					GeometryRoot  geometry );
		int  dimension (
 					org.opengis.geometry.coordinate.DirectPosition  point );
		int  coordinateDimension ( );
		org.opengis.geometry.complex.Complex[]  maximalComplex ( );
		GeometryRoot  transform (
 					String  newCRS );
		org.opengis.geometry.coordinate.Envelope  envelope ( );
		org.opengis.geometry.coordinate.DirectPosition  centroid ( );
		GeometryRoot  convexHull ( );
		GeometryRoot  buffer (
 					org.opengis.measure.Distance  radius );
		};
</Java>
               </classDefinition>
			
       <!-- =========================================== -->
<!-- =================== class =================== -->
               <classDefinition name="Boundary" abstract="true">
                  <Java>
package org.opengis.geometry.root;
public interface Boundary
		{
		};
</Java>
               </classDefinition>
		
            </package>
		
            <package>
               <packageName>Geometric aggregates</packageName>
               <javaPrefix>org.opengis.geometry.aggregates</javaPrefix>
			
			
			
       <!-- =========================================== -->
<!-- =================== class =================== -->
               <classDefinition name="Aggregate" abstract="true">
                  <Java>
package org.opengis.geometry.aggregates;
public interface Aggregate extends 
					org.opengis.geometry.root.GeometryRoot
		{
		void setElement(org.opengis.geometry.root.GeometryRoot[] element);
		org.opengis.geometry.root.GeometryRoot[] getElement();
		Aggregate  fromSet (
 					org.opengis.geometry.root.GeometryRoot[]  set );
		};
</Java>
               </classDefinition>
			
       <!-- =========================================== -->
<!-- =================== class =================== -->
               <classDefinition name="MultiCurve">
                  <Java>
package org.opengis.geometry.aggregates;
public interface MultiCurve extends 
					MultiPrimitive
		{
		void setLength(org.opengis.measure.Length length);
		org.opengis.measure.Length getLength();
		};
</Java>
               </classDefinition>
			
       <!-- =========================================== -->
<!-- =================== class =================== -->
               <classDefinition name="MultiPoint">
                  <Java>
package org.opengis.geometry.aggregates;
public interface MultiPoint extends 
					MultiPrimitive
		{
		void setPosition(org.opengis.geometry.coordinate.DirectPosition[] position);
		org.opengis.geometry.coordinate.DirectPosition[] getPosition();
		};
</Java>
               </classDefinition>
			
       <!-- =========================================== -->
<!-- =================== class =================== -->
               <classDefinition name="MultiPrimitive" abstract="true">
                  <Java>
package org.opengis.geometry.aggregates;
public interface MultiPrimitive extends 
					Aggregate
		{
		};
</Java>
               </classDefinition>
			
       <!-- =========================================== -->
<!-- =================== class =================== -->
               <classDefinition name="MultiSolid">
                  <Java>
package org.opengis.geometry.aggregates;
public interface MultiSolid extends 
					MultiPrimitive
		{
		void setVolume(org.opengis.measure.Volume volume);
		org.opengis.measure.Volume getVolume();
		void setArea(org.opengis.measure.Area area);
		org.opengis.measure.Area getArea();
		};
</Java>
               </classDefinition>
			
       <!-- =========================================== -->
<!-- =================== class =================== -->
               <classDefinition name="MultiSurface">
                  <Java>
package org.opengis.geometry.aggregates;
public interface MultiSurface extends 
					MultiPrimitive
		{
		void setArea(org.opengis.measure.Area area);
		org.opengis.measure.Area getArea();
		void setPerimeter(org.opengis.measure.Length perimeter);
		org.opengis.measure.Length getPerimeter();
		};
</Java>
               </classDefinition>
		
            </package>
	
         </package>
}</Java>
   </classDefinition>
</Declarations>